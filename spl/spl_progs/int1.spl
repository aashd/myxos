alias  phy_sp S0;
alias  syscall_no S1;
alias  file_name S2;
alias  i S3;
alias fat_entry S5;
alias  bas_block S4;
alias j S6;
alias z S7;
phy_sp = [PTBR+(SP/512)*2]*512+SP%512;
syscall_no=[phy_sp-1];
file_name=[phy_sp-3];
if(syscall_no==1)then
	load(5,19);//fat
	load(6,20);//dfl
	i=6*512;///searching for bas block which is free
	while(i<6*512+448&&[i]!=0)do
		i=i+1;
	endwhile;
	if([i]==0)then
		bas_block=i-6*512;
	else
		[phy_sp-2]=-2;
		ireturn;
	endif;
	i=5*512;//search fat for similar filenames
	while(i<6*512&&[i]!=file_name)do
		i=i+8;
	endwhile;
	if([i]==file_name)then
		[phy_sp-2]=0;
		ireturn;
	endif;
	i=5*512+2;//search for free fat entry
	while(i<6*512&&[i]!=-1)do
		i=i+8;
	endwhile;
	if(i>=6*512)then
		[phy_sp-2]=-3;
		ireturn;
	else
		[i]=bas_block;
		[i-1]=0;
		[i-2]=file_name;
	endif;
	load(1,bas_block);
	i=512;
	while(i<1024)do
		[i]=-1;
		i=i+1;
	endwhile;
	[6*512+bas_block]=1;
	store(5,19);
	store(6,20);
	store(1,bas_block);
	[phy_sp-2]=0;
	ireturn;
else
	load(5,19);
	load(6,20);
	i=FAT;//5*512
	while(i<6*512&&[i]!=file_name)do//checking whether file name is authentic
		i=i+8;
	endwhile;
	if(i>=6*512)then
		[phy_sp-2]=-1;
		ireturn;
	else
		fat_entry=(i-FAT)/8;
	endif;
	i=FILE_TABLE;//1024+256+64
	while(i<FILE_TABLE+128&&[i]!=fat_entry)do//any process has the file open?
		i=i+2;
	endwhile;
	if(i>=FILE_TABLE+128)then//////here( [i]==fat_entry) ""at end 1472 and if fat_entry =0 then 0=""
		bas_block=[FAT+8*fat_entry+2];//not open
	else
		[phy_sp-2]=-2;
                ireturn;
	endif;
	load(1,bas_block);///removing all data blocks
	i=512;
	while (i<768)do
		if([i]==-1)then
			break;
		else
			z=[i];
			load(1,z);
			j=512;
			while(j<1024)do
				[j]="";
				j=j+1;
			endwhile;
			store(1,z);
			[6*512+z]=0;//disk free list is made free
		endif;
		load(1,bas_block);
		i=i+1;
	endwhile;
	i=512;
	while(i<1024)do//removing basic block
		[i]="";
		i=i+1;
	endwhile;
	store(1,bas_block);
	i=FAT+8*fat_entry;//removing fat entry
	[i]=-1;
	[i+1]=0;
	[i+2]=-1;
	store(5,19);
	i=6*512+bas_block;//setting disk free list entry to free
	[i]=0;
	store(6,20);
	[phy_sp-2]=0;
	ireturn;	
endif;
